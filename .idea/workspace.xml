<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="114d12f3-1121-4d0a-82ef-f10c4fed03f2" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/src/config/config.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/config/config.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/injection/domain/ports/secondary/rules-repository.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/injection/domain/ports/secondary/rules-repository.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/injection/domain/usecases/get-injection-debit.test.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/injection/domain/usecases/get-injection-debit.test.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/injection/domain/usecases/get-injection-debit.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/injection/domain/usecases/get-injection-debit.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/injection/domain/usecases/rules/rule-five.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/injection/domain/usecases/rules/rule-five.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/injection/domain/usecases/rules/rule-four.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/injection/domain/usecases/rules/rule-four.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/injection/domain/usecases/rules/rule-one.test.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/injection/domain/usecases/rules/rule-one.test.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/injection/domain/usecases/rules/rule-one.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/injection/domain/usecases/rules/rule-one.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/injection/domain/usecases/rules/rule-three.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/injection/domain/usecases/rules/rule-three.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/injection/domain/usecases/rules/rule-two.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/injection/domain/usecases/rules/rule-two.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/injection/domain/usecases/rules/rules.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/injection/domain/usecases/rules/rules.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/injection/domain/usecases/update-regime.test.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/injection/domain/usecases/update-regime.test.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/injection/domain/usecases/update-regime.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/injection/domain/usecases/update-regime.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/injection/infra/adapters/fuel-debit.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/injection/infra/controllers/get-injection-debit.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/injection/infra/controllers/get-injection-debit.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/injection/infra/controllers/update-regime.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/injection/infra/controllers/update-regime.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/injection/infra/repositories/in-memory-rules.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/injection/infra/repositories/in-memory-rules.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/main.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/server/hooks/with-authorization.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/server/hooks/with-authorization.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/integration/update-regime.test.ts" beforeDir="false" afterPath="$PROJECT_DIR$/tests/integration/update-regime.test.ts" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;customColor&quot;: &quot;&quot;,
  &quot;associatedIndex&quot;: -1
}</component>
  <component name="ProjectId" id="2cNFRB43tqyJUcycWP8McNiJifA" />
  <component name="ProjectViewState">
    <option name="autoscrollFromSource" value="true" />
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;git-widget-placeholder&quot;: &quot;feature/indy&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;ts.external.directory.path&quot;: &quot;/Users/patricknguyen/Desktop/perso/bootstrap-node-api-ts/node_modules/typescript/lib&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="RunManager" selected="npm.test:unit">
    <configuration name="build" type="js.build_tools.npm" temporary="true" nameIsGenerated="true">
      <package-json value="$PROJECT_DIR$/package.json" />
      <command value="run" />
      <scripts>
        <script value="build" />
      </scripts>
      <node-interpreter value="project" />
      <envs />
      <method v="2" />
    </configuration>
    <configuration name="test:integration" type="js.build_tools.npm" temporary="true" nameIsGenerated="true">
      <package-json value="$PROJECT_DIR$/package.json" />
      <command value="run" />
      <scripts>
        <script value="test:integration" />
      </scripts>
      <node-interpreter value="project" />
      <envs />
      <method v="2" />
    </configuration>
    <configuration name="test:unit" type="js.build_tools.npm" temporary="true" nameIsGenerated="true">
      <package-json value="$PROJECT_DIR$/package.json" />
      <command value="run" />
      <scripts>
        <script value="test:unit" />
      </scripts>
      <node-interpreter value="project" />
      <envs />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="npm.test:unit" />
        <item itemvalue="npm.test:integration" />
        <item itemvalue="npm.build" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="114d12f3-1121-4d0a-82ef-f10c4fed03f2" name="Changes" comment="" />
      <created>1707944119501</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1707944119501</updated>
      <workItem from="1707944122813" duration="2153000" />
      <workItem from="1707946578762" duration="1208000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
</project>